{"version":3,"sources":["App.js","hooks.js","reportWebVitals.js","index.js"],"names":["PAGECOUNT","wanakana_opt","customKanaMapping","FixedPosition","styled","div","Dict","Head","Body","Badge","span","JLPTBadge","ExplainArea","Meaning","data","Array","isArray","length","k","join","r","explains","map","index","pos","explain","p","i","posMap","key","examples","jpn","eng","className","Object","fromEntries","entries","posAbbr","abbr","detail","prop","data-tip","data-for","WORDS","RAW_WORDS","e","JLPT","DEFAULT_SEARCH_KEYWORD","w","wanakana","DEFAULT_SELECTED_INDEX","Math","floor","random","App","effect","deps","delay","inputRef","useRef","useState","dictMap","setDictMap","dictionary","setDictionary","searchText","setSearchText","words","setWords","_tabIndex","setTabIndex","tabIndex","max","min","searchKeyword","setSearchKeyword","selectedIndex","setSelectedIndex","useEffect","a","axios","get","urlJoin","window","location","href","r_dictionary","r_dictmap","console","error","id","flat","ReactTooltip","rebuild","start","performance","now","patterns","current","value","trim","split","filter","RegExp","_","assoc","some","exec","elapsed","debug","handler","setTimeout","clearTimeout","largeMode","query","mediaMatch","matchMedia","matches","setMatches","addListener","removeListener","useMediaQuery","tabLinks","push","onClick","evt","ceil","ref","onChange","target","onKeyDown","slice","n","props","place","type","delayHide","getContent","parseInt","dictIndex","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155c6448.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './App.css';\nimport posAbbr from './posAbbr.json';\nimport RAW_WORDS from './words.json';\nimport JLPT from './jlpt.json';\nimport styled from 'styled-components';\nimport * as wanakana from 'wanakana';\nimport axios from 'axios'\nimport ReactTooltip from 'react-tooltip'\nimport urlJoin from 'url-join'\nimport {useDebouncedEffect, useMediaQuery} from './hooks'\n\nconst PAGECOUNT = 1000;\n\nlet wanakana_opt = {\n\tcustomKanaMapping: { '.': '.', '^':'^', '$':'$', '+':'+', '?':'?', '[':'[', ']':']' }\n}\n\nlet FixedPosition = styled.div`\n\tposition:fixed;\n\ttop:0;bottom:0;\n\tleft:0;right:0;\n`\n\nlet Dict = styled.div`\n\twidth: 320px;\n    margin: 0 auto;\n    padding: 0 4px;\n\theight: 100%;\n\tposition: relative;\n\t\n\t\n\t#dict-tooltip {\n\t\tmax-width: 30rem;\n\t}\n\t\n\t@media (max-width: 575px) {\n\t\twidth:100%;\n\t\tol.words {\n\t\t\twidth: 100% !important;\n\t\t\tpadding-left:3rem;\n\t\t\tpadding-right:3rem;\n\t\t}\n\t}\n\t\n\t@media (min-width: 576px) and (max-width: 767px) {\n\t\twidth:550px !important;\n\t}\n\t@media (min-width: 768px) and (max-width: 950px) {\n\t\twidth:750px !important;\n\t}\n\t@media (min-width: 950px) {\n\t\twidth:940px !important;\n\t}\n\t\n\t& ol li {\n\t\tmargin-left: 1rem;\n\t}\n\t\n\t& ol li:hover {\n\t\tbackground: #eef;\n\t}\n\t\n\t& #dict-tooltip {\n\t\t.kanji {\n\t\t\tfont-size: 1rem;\n\t\t}\n\t\t.r {\n\t\t\tfont-size: 0.8rem;\n\t\t\tmargin-left:1rem;\n\t\t}\n\t\tol {\n\t\t\tpadding-inline-start: 0.5rem;\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n`\n\nlet Head = styled.div`\n\tposition: relative;\n    top: 0px;\n\theight: 72px;\n    background: white;\n\tpadding-top: 1rem;\n\tpadding-bottom: 1rem;\n\tfont-size:1.2rem;\n\t\n\tlabel {\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t\tfont-size:1.5rem;\n\t\tmargin:0 0.8rem;\n\t\t\n\t\tinput {\n\t\t\tflex-grow: 1;\n\t\t\tfont-size:1.5rem;\n\t\t}\n\t}\n\t\n\t& > div {\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t\t\n\t\tspan,b {\n\t\t\tflex-grow: 1;\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t\n\t.tabLink {\n\t\tdisplay: inline-block;\n\t\tmargin-top:0.1rem;\n\t\tmargin-left:0.1rem;\n\t\tmargin-right:0.1rem;\n\t\tmargin-bottom:0.1rem;\n\t\tcursor: pointer;\n\t}\n`\n\nlet Body = styled.div`\n\tposition: absolute;\n\ttop: 96px;\n\tbottom: 0px;\n\twidth: 100%;\n\tdisplay: flex;\n\t\n\t& ol.words {\n\t\tmargin-top: 0;\n\t\toverflow-y: auto;\n\t\theight: 100%;\n\t\tmin-width:200px;\n\t}\n\t\n\t& ol.words li.selected {\n\t\tbackground:#fbc;\n\t}\n\t\n\t& ol.words li .word {\n\t\tdisplay: inline-block;\n\t\tmin-width: 5rem;\n\t}\n`\n\nlet Badge = styled.span`\n\tdisplay: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 700;\n    line-height: 1;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    border-radius: 0.25rem;\n    user-select: none !important;\n\t\n\tcolor: #fff;\n    background-color: #17a2b8;\n\tmargin-left: 0.25rem!important;\n\tmargin-right: 0.25rem!important;\n`\n\nlet JLPTBadge = styled.span`\n\tdisplay: inline-block;\n    padding: 0.25em 0.4em;\n    font-size: 75%;\n    font-weight: 700;\n    line-height: 1;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: baseline;\n    border-radius: 0.25rem;\n    user-select: none !important;\n\t\n\tcolor: #fff;\n    background-color: #b8a230;\n\tmargin-left: 0.25rem!important;\n\tmargin-right: 0.25rem!important;\n`\n\nlet ExplainArea = styled.div`\n\tbackground:#fff2ff;\n\tflex-grow: 1;\n\tpadding: 0.8rem;\n\toverflow-y: auto;\n\t\n\tspan.k {\n\t\tfont-size: 1.5rem;\n\t\tfont-weight: bold;\n\t}\n\tspan.r {\n\t\tfont-size: 0.9rem;\n\t\tpadding-left:1rem;\n\t}\n\t.exJP {\n\n\t}\n\t.exEN {\n\t\tfont-size: 0.9rem;\n\t\tcolor: #575;\n\t\tpadding-inline-start: 1rem;\n\t}\n`\n\nlet Meaning = ({data}) => {\n\tif (!Array.isArray(data) || data.length!==4) \n\t\treturn <div/>\n\tlet k = data[0].join(\"・\")\n\tlet r = data[1].join(\", \")\n\t\n\tlet explains = data[2].map(([pos,explain],index)=>\n\t\t<li key={index}>{pos.map((p,i)=>posMap[p]({key: i}))}{explain.join(' / ')}</li>\n\t)\n\tlet examples = data[3].map(([jpn,eng],index)=>\n\t\t<li key={index}>\n\t\t\t<div className=\"exJP\">{jpn}</div>\n\t\t\t<div className=\"exEN\">{eng}</div>\n\t\t</li>\n\t)\n\treturn (\n\t<div>\n\t\t<div>\n\t\t\t<span className=\"k\">{k || r}</span>\n\t\t\t{ k && (<span className=\"r\">{r}</span>)}\n\t\t</div>\n\t\t<ol>\n\t\t\t{explains}\n\t\t</ol>\n\t\t<ol>\n\t\t\t{examples}\n\t\t</ol>\n\t</div>\n\t)\n}\n\nlet posMap = Object.fromEntries(\n\t\tObject.entries(posAbbr).map(([i, [abbr, detail]])=>[i, (prop)=>(\n\t\t\t<Badge {...prop} data-tip={detail} data-for=\"pos-tooltip\">{abbr}</Badge>\n\t\t)] )\n\t)\n\nlet WORDS = RAW_WORDS.map((e,i)=>[i,e[0],JLPT[i]])\nlet DEFAULT_SEARCH_KEYWORD = WORDS.map(([i,w,n])=>[wanakana.toKatakana(w, wanakana_opt)])\nlet DEFAULT_SELECTED_INDEX = Math.floor(Math.random()*WORDS.length)\n\nfunction App() {\n\tlet inputRef = useRef(null);\n\tlet [dictMap,setDictMap] = useState([]);\n\tlet [dictionary,setDictionary] = useState([]);\n\tlet [searchText,setSearchText] = useState('');\n\tlet [words,setWords] = useState(WORDS);\n\tlet [_tabIndex, setTabIndex] = useState(0);\n\tlet tabIndex = Math.max(Math.min(_tabIndex, words.length/PAGECOUNT-1), 0)\n\tlet [searchKeyword, setSearchKeyword] = useState(DEFAULT_SEARCH_KEYWORD)\n\tlet [selectedIndex, setSelectedIndex] = useState(DEFAULT_SELECTED_INDEX)\n\t\n\tuseEffect(()=>{\n\t\t(async function() {\n\t\t\ttry {\n\t\t\t\tlet r_dictionary = await axios.get(urlJoin(window.location.href, 'dictionary.json'))\n\t\t\t\tlet r_dictmap = await axios.get(urlJoin(window.location.href, 'dict_map.json'))\n\t\t\t\t\n\t\t\t\tif (r_dictionary.data.length>0 && r_dictmap.data.length>0) {\n\t\t\t\t\tsetDictionary(r_dictionary.data)\n\t\t\t\t\tsetDictMap(r_dictmap.data)\n\t\t\t\t}\n\t\t\t} catch(e) {\n\t\t\t\tconsole.error('cannot load dictionary file')\n\t\t\t}\n\t\t})()\n\t}, [])\n\t\n\tuseEffect(()=>{\n\t\tif (dictMap.length>0 && dictionary.length>0) {\n\t\t\tsetSearchKeyword(WORDS.map(([i,w,n])=>{\n\t\t\t\tif (dictMap[i].length>0) {\n\t\t\t\t\treturn dictMap[i].map(id=>[w, ...dictionary[id][0], ...dictionary[id][1]]).flat().map(e=>wanakana.toKatakana(e, wanakana_opt))\n\t\t\t\t} else\n\t\t\t\t\treturn [wanakana.toKatakana(w, wanakana_opt)]\n\t\t\t}))\n\t\t}\n\t}, [dictMap, dictionary])\n\t\n\tuseEffect(()=>{\n\t\tReactTooltip.rebuild()\n\t}, [words, tabIndex, selectedIndex])\n\t\n\tuseDebouncedEffect(()=>{\n\t\tlet start = window.performance.now()\n\t\tlet patterns = wanakana.toKatakana(inputRef.current.value.trim(), wanakana_opt)\n\t\t\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t\t\t.filter(e=>e)\n\t\t\t\t\t\t\t\t.map(e=>new RegExp(e))\n\t\tif (patterns.length>0) {\n\t\t\ttry {\n\t\t\t\tsetWords(WORDS.filter((_,index)=>{\n\t\t\t\t\tlet assoc = searchKeyword[index]\n\t\t\t\t\treturn patterns.some(p=>assoc.some(a=>p.exec(a)))\n\t\t\t\t}));\n\t\t\t} catch {}\n\t\t} else\n\t\t\tsetWords(WORDS);\n\t\tlet elapsed = window.performance.now() - start;\n\t\tconsole.debug(`search: ${patterns} [${elapsed}]`)\n\t}, [searchText, searchKeyword], 500)\n\t\n\tuseEffect(()=>{\n\t\tinputRef.current && wanakana.bind(inputRef.current, wanakana_opt)\n\t}, [inputRef])\n\t\n\tconst largeMode = useMediaQuery('(min-width: 576px)');\n\t\n\tlet tabLinks = []\n\tfor (let i=0; i<Math.ceil(words.length/PAGECOUNT); i+=1) {\n\t\tif (tabIndex!==i) {\n\t\t\ttabLinks.push(<span key={\"tab-\"+i} className=\"tabLink\" onClick={evt=>setTabIndex(i)}>{i+1}</span>)\n\t\t} else {\n\t\t\ttabLinks.push(<b key={\"tab-\"+i} className=\"tabLink\">{i+1}</b>)\n\t\t}\n\t}\n\t\n\treturn (\n\t<FixedPosition>\n\t\t<Dict>\n\t\t\t<Head>\n\t\t\t\t<label>{'Search：'}<input ref={inputRef} onChange={evt=>setSearchText(evt.target.value)} onKeyDown={evt=>setSearchText(evt.target.value)}/></label>\n\t\t\t\t<div>{tabLinks}</div>\n\t\t\t</Head>\n\t\t\t\n\t\t\t<Body>\n\t\t\t\t<ol className=\"words\">\n\t\t\t\t{\n\t\t\t\t\twords.slice(tabIndex*PAGECOUNT, (tabIndex+1)*PAGECOUNT).map(([i,w,n])=>{\n\t\t\t\t\t\tlet props = {\n\t\t\t\t\t\t\tkey: i, \n\t\t\t\t\t\t\tvalue: i+1, \n\t\t\t\t\t\t\tonClick: ()=>setSelectedIndex(i),\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i===selectedIndex)\n\t\t\t\t\t\t\tprops['className'] = 'selected'\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li {...props}>\n\t\t\t\t\t\t\t\t<span className=\"word\" data-tip={i} data-for=\"dict-tooltip\">{w}</span>\n\t\t\t\t\t\t\t\t{n>0 && [' ', <JLPTBadge>JLPT {n}</JLPTBadge>]}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</ol>\n\t\t\t\t{ largeMode &&\n\t\t\t\t\t<ExplainArea>\n\t\t\t\t\t\t{(dictMap[selectedIndex] || []).map(id=>\n\t\t\t\t\t\t\t<Meaning key={`dictionary-${id}`} data={dictionary[id]} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ReactTooltip id='pos-tooltip' place=\"bottom\" type=\"info\" effect=\"solid\" />\n\t\t\t\t\t</ExplainArea>\n\t\t\t\t}\n\t\t\t</Body>\n\t\t\t\n\t\t\t<ReactTooltip id='dict-tooltip' delayHide={500} place={largeMode?'left':'bottom'} type=\"success\" effect=\"solid\" getContent={(id) => { \n\t\t\t\tid = parseInt(id)\n\t\t\t\tif (id>=0 && dictMap[id]) {\n\t\t\t\t\tconst matches = dictMap[id].map(dictIndex=>[dictIndex, dictionary[dictIndex]]).filter(e=>e[1])\n\t\t\t\t\tif (matches && matches.length>0) {\n\t\t\t\t\t\treturn matches.map(([dictIndex, match])=>(\n\t\t\t\t\t\t\t<div key={\"dictionary\"+dictIndex}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span className=\"kanji\">{match[0].join(\", \") || match[1][0]}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"r\">({match[1].join(\", \")})</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ol>{\n\t\t\t\t\t\t\t\t\tmatch[2].map(([pos,explain],index)=>\n\t\t\t\t\t\t\t\t\t\t<li key={index}>{explain.join(' / ')}</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}}/>\n\t\t</Dict>\n\t</FixedPosition>\n\t);\n}\n\nexport default App;\n","import {useEffect, useState} from 'react';\n\nexport const useMediaQuery = (query) => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n\nexport const useDebouncedEffect = (effect, deps, delay) => {\n    useEffect(() => {\n        const handler = setTimeout(() => effect(), delay);\n\n        return () => clearTimeout(handler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [...deps || [], delay]);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
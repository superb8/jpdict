{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PAGECOUNT","Dict","styled","div","Head","WORDS","RAW_WORDS","map","e","i","DEFAULT_SEARCH_KEYWORD","w","wanakana","App","effect","deps","delay","inputRef","useRef","useState","dictMap","setDictMap","dictionary","setDictionary","searchText","setSearchText","words","setWords","_tabIndex","setTabIndex","tabIndex","Math","max","min","length","searchKeyword","setSearchKeyword","useEffect","a","axios","get","urlJoin","window","location","href","r_dictmap","r_dictionary","data","id","flat","ReactTooltip","rebuild","start","performance","now","patterns","current","value","trim","split","filter","RegExp","_","index","assoc","some","p","exec","elapsed","console","log","handler","setTimeout","clearTimeout","customKanaMapping","tabLinks","push","className","onClick","evt","ceil","ref","onKeyDown","target","slice","data-tip","data-for","delayHide","place","type","getContent","parseInt","matches","dictIndex","match","join","explain","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"khlXAUMA,EAAY,IAEdC,EAAOC,IAAOC,IAAV,ogBAoCJC,EAAOF,IAAOC,IAAV,saAmCJE,EAAQC,EAAUC,KAAI,SAACC,EAAEC,GAAH,OAAQA,GAAR,mBAAaD,OACnCE,EAAyBL,EAAME,KAAI,mCAAII,GAAJ,sBAAW,CAACC,aAAoBD,OA0GxDE,MAxGf,WACC,IAbkCC,EAAQC,EAAMC,EAa5CC,EAAWC,iBAAO,MADR,EAEaC,mBAAS,IAFtB,mBAETC,EAFS,KAEDC,EAFC,OAGmBF,mBAAS,IAH5B,mBAGTG,EAHS,KAGEC,EAHF,OAImBJ,mBAAS,IAJ5B,mBAITK,EAJS,KAIEC,EAJF,OAKSN,mBAASd,GALlB,mBAKTqB,EALS,KAKHC,EALG,OAMiBR,mBAAS,GAN1B,mBAMTS,EANS,KAMEC,EANF,KAOVC,EAAWC,KAAKC,IAAID,KAAKE,IAAIL,EAAWF,EAAMQ,OAAOlC,EAAU,GAAI,GAPzD,EAQ0BmB,mBAAST,GARnC,mBAQTyB,EARS,KAQMC,EARN,KAUdC,qBAAU,WACT,sBAAC,8BAAAC,EAAA,sEACsBC,IAAMC,IAAIC,IAAQC,OAAOC,SAASC,KAAM,kBAD9D,cACIC,EADJ,gBAEyBN,IAAMC,IAAIC,IAAQC,OAAOC,SAASC,KAAM,oBAFjE,OAEIE,EAFJ,OAGAzB,EAAWwB,EAAUE,MACrBxB,EAAcuB,EAAaC,MAJ3B,0CAAD,KAME,IAEHV,qBAAU,WACLjB,EAAQc,OAAO,GAAKZ,EAAWY,OAAO,GACzCE,EAAiB/B,EAAME,KAAI,YAAY,IAAD,mBAATE,EAAS,eACrC,OAAOW,EAAQX,GAAGF,KAAI,SAAAyC,GAAE,4BAAM1B,EAAW0B,GAAI,IAArB,YAA4B1B,EAAW0B,GAAI,QAAKC,OAAO1C,KAAI,SAAAC,GAAC,OAAEI,aAAoBJ,YAE1G,CAACY,EAASE,IAEbe,qBAAU,WACTa,IAAaC,YACX,CAACzB,EAAOI,IAxCuBhB,EA0Cf,WAClB,IAAIsC,EAAQV,OAAOW,YAAYC,MAC3BC,EAAW3C,aAAoBK,EAASuC,QAAQC,MAAMC,QACnDC,MAAM,KACNC,QAAO,SAAApD,GAAC,OAAEA,KACVD,KAAI,SAAAC,GAAC,OAAE,IAAIqD,OAAOrD,MACzB,GAAI+C,EAASrB,OAAO,EACnB,IACCP,EAAStB,EAAMuD,QAAO,SAACE,EAAEC,GACxB,IAAIC,EAAQ7B,EAAc4B,GAC1B,OAAOR,EAASU,MAAK,SAAAC,GAAC,OAAEF,EAAMC,MAAK,SAAA3B,GAAC,OAAE4B,EAAEC,KAAK7B,aAE7C,eAEFX,EAAStB,GACV,IAAI+D,EAAU1B,OAAOW,YAAYC,MAAQF,EACzCiB,QAAQC,IAAR,mBAAwBf,EAAxB,cAAsCa,EAAtC,OA1DyCrD,EA2DvC,CAACS,EAAYW,GA3DgCnB,EA2DhB,IA1D7BqB,qBAAU,WACN,IAAMkC,EAAUC,YAAW,kBAAM1D,MAAUE,GAE3C,OAAO,kBAAMyD,aAAaF,MAHrB,sBAKFxD,GAAQ,IALN,CAKUC,KAuDtBqB,qBAAU,WACTpB,EAASuC,SAAW5C,OAAcK,EAASuC,QAAS,CACnDkB,kBAAmB,CAAE,IAAK,IAAK,IAAI,IAAK,EAAI,IAAK,IAAI,IAAK,IAAI,IAAK,IAAI,IAAK,IAAI,SAE/E,CAACzD,IAGJ,IADA,IAAI0D,EAAW,GAvDD,WAwDLlE,GACJqB,IAAWrB,EACdkE,EAASC,KAAK,sBAAqBC,UAAU,UAAUC,QAAS,SAAAC,GAAG,OAAElD,EAAYpB,IAAnE,SAAwEA,EAAE,GAA/D,OAAOA,IAEhCkE,EAASC,KAAK,mBAAkBC,UAAU,UAA5B,SAAuCpE,EAAE,GAAjC,OAAOA,KAJtBA,EAAE,EAAGA,EAAEsB,KAAKiD,KAAKtD,EAAMQ,OAAOlC,GAAYS,GAAG,EAAI,EAAjDA,GAQT,OACC,eAACR,EAAD,WACC,eAACG,EAAD,WACC,qDAAQ,uBAAO6E,IAAKhE,EAAUiE,UAAW,SAAAH,GAAG,OAAEtD,EAAcsD,EAAII,OAAO1B,aACvE,8BAAMkB,OAGP,oBAAIE,UAAU,QAAd,SAECnD,EAAM0D,MAAMtD,EAAS9B,GAAY8B,EAAS,GAAG9B,GAAWO,KAAI,YAAY,IAAD,mBAATE,EAAS,KAAPE,EAAO,UACtE,OAAO,oBAAY8C,MAAOhD,EAAE,EAArB,SAAwB,sBAAMoE,UAAU,OAAOQ,WAAU5E,EAAG6E,WAAS,eAA7C,SAA6D3E,KAA5EF,QAIlB,cAAC,IAAD,CAAcuC,GAAG,eAAeuC,UAAW,IAAMC,MAAM,QAAQC,KAAK,OAAO3E,OAAO,QAAQ4E,WAAY,SAAC1C,GAEtG,IADAA,EAAK2C,SAAS3C,KACN,GAAK5B,EAAQ4B,GAAK,CACzB,IAAM4C,EAAUxE,EAAQ4B,GAAIzC,KAAI,SAAAsF,GAAS,MAAE,CAACA,EAAWvE,EAAWuE,OAClE,GAAID,GAAWA,EAAQ1D,OAAO,EAC7B,OAAO0D,EAAQrF,KAAI,mCAAEsF,EAAF,KAAaC,EAAb,YAClB,gCACC,gCACC,sBAAMjB,UAAU,QAAhB,SAAyBiB,EAAM,GAAGC,KAAK,QACvC,uBAAMlB,UAAU,IAAhB,cAAsBiB,EAAM,GAAGC,KAAK,MAApC,UAED,6BACCD,EAAM,GAAGvF,KAAI,WAAewD,GAAf,uBAAMiC,GAAN,kBACZ,6BAAiBA,EAAQD,KAAK,QAArBhC,UAPF,aAAa8B,MAc1B,OAAO,YC5KII,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfc663e9.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './App.css';\nimport RAW_WORDS from './words.json';\nimport styled from 'styled-components';\nimport * as wanakana from 'wanakana';\nimport axios from 'axios'\nimport ReactTooltip from 'react-tooltip'\nimport urlJoin from 'url-join'\n\nconst PAGECOUNT = 1000;\n\nlet Dict = styled.div`\n\twidth: 320px;\n    margin: 0 auto;\n    padding: 0 4px;\n\t\n\t& ol.words {\n\t\tmargin-top: 0;\n\t}\n\t\n\t& ol li {\n\t\tmargin-left: 1rem;\n\t}\n\t\n\t& ol li:hover {\n\t\tbackground: #eef;\n\t}\n\t\n\t& .word {\n\t\tdisplay: inline-block;\n\t\tmin-width: 4rem;\n\t}\n\t& #dict-tooltip {\n\t\t.kanji {\n\t\t\tfont-size: 1rem;\n\t\t}\n\t\t.r {\n\t\t\tfont-size: 0.8rem;\n\t\t\tmargin-left:1rem;\n\t\t}\n\t\tol {\n\t\t\tpadding-inline-start: 0.5rem;\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n`\n\nlet Head = styled.div`\n    top: 0px;\n    position: sticky;\n    background: white;\n\tpadding-bottom: 1rem;\n\tfont-size:1.2rem;\n\t\n\t& > div {\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t}\n\t\n\tinput {\n\t\tflex-grow: 1;\n\t}\n\t\n\t.tabLink {\n\t\tpadding: 0.2rem;\n\t\tmargin-top:0.1rem;\n\t\tmargin-left:0.1rem;\n\t\tmargin-right:0.1rem;\n\t\tmargin-bottom:0.1rem;\n\t\tcursor: pointer;\n\t}\n`\n\nexport const useDebouncedEffect = (effect, deps, delay) => {\n    useEffect(() => {\n        const handler = setTimeout(() => effect(), delay);\n\n        return () => clearTimeout(handler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [...deps || [], delay]);\n}\n\nlet WORDS = RAW_WORDS.map((e,i)=>[i,...e])\nlet DEFAULT_SEARCH_KEYWORD = WORDS.map(([i,w,n])=>[wanakana.toKatakana(w)])\n\nfunction App() {\n\tlet inputRef = useRef(null);\n\tlet [dictMap,setDictMap] = useState([])\n\tlet [dictionary,setDictionary] = useState([])\n\tlet [searchText,setSearchText] = useState('');\n\tlet [words,setWords] = useState(WORDS);\n\tlet [_tabIndex, setTabIndex] = useState(0);\n\tlet tabIndex = Math.max(Math.min(_tabIndex, words.length/PAGECOUNT-1), 0)\n\tlet [searchKeyword, setSearchKeyword] = useState(DEFAULT_SEARCH_KEYWORD)\n\t\n\tuseEffect(()=>{\n\t\t(async function() {\n\t\t\tlet r_dictmap = await axios.get(urlJoin(window.location.href, 'dict_map.json'))\n\t\t\tlet r_dictionary = await axios.get(urlJoin(window.location.href, 'dictionary.json'))\n\t\t\tsetDictMap(r_dictmap.data)\n\t\t\tsetDictionary(r_dictionary.data)\n\t\t})()\n\t}, [])\n\t\n\tuseEffect(()=>{\n\t\tif (dictMap.length>0 && dictionary.length>0)\n\t\t\tsetSearchKeyword(WORDS.map(([i,w,n])=>{\n\t\t\t\treturn dictMap[i].map(id=>[...dictionary[id][0], ...dictionary[id][1]]).flat().map(e=>wanakana.toKatakana(e))\n\t\t\t}))\n\t}, [dictMap, dictionary])\n\t\n\tuseEffect(()=>{\n\t\tReactTooltip.rebuild()\n\t}, [words, tabIndex])\n\t\n\tuseDebouncedEffect(()=>{\n\t\tlet start = window.performance.now()\n\t\tlet patterns = wanakana.toKatakana(inputRef.current.value.trim())\n\t\t\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t\t\t.filter(e=>e)\n\t\t\t\t\t\t\t\t.map(e=>new RegExp(e))\n\t\tif (patterns.length>0) {\n\t\t\ttry {\n\t\t\t\tsetWords(WORDS.filter((_,index)=>{\n\t\t\t\t\tlet assoc = searchKeyword[index]\n\t\t\t\t\treturn patterns.some(p=>assoc.some(a=>p.exec(a)))\n\t\t\t\t}));\n\t\t\t} catch {}\n\t\t} else\n\t\t\tsetWords(WORDS);\n\t\tlet elapsed = window.performance.now() - start;\n\t\tconsole.log(`search: \"${patterns}\" [${elapsed}]`)\n\t}, [searchText, searchKeyword], 500)\n\t\n\tuseEffect(()=>{\n\t\tinputRef.current && wanakana.bind(inputRef.current, {\n\t\t\tcustomKanaMapping: { '.': '.', '^':'^', '$':'$', '+':'+', '?':'?', '[':'[', ']':']' }\n\t\t})\n\t}, [inputRef])\n\t\n\tlet tabLinks = []\n\tfor (let i=0; i<Math.ceil(words.length/PAGECOUNT); i+=1) {\n\t\tif (tabIndex!==i) {\n\t\t\ttabLinks.push(<span key={\"tab-\"+i} className=\"tabLink\" onClick={evt=>setTabIndex(i)}>{i+1}</span>)\n\t\t} else {\n\t\t\ttabLinks.push(<b key={\"tab-\"+i} className=\"tabLink\">{i+1}</b>)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<Dict>\n\t\t\t<Head>\n\t\t\t\t<div>搜索：<input ref={inputRef} onKeyDown={evt=>setSearchText(evt.target.value)}/></div>\n\t\t\t\t<div>{tabLinks}</div>\n\t\t\t</Head>\n\t\t\t\n\t\t\t<ol className=\"words\">\n\t\t\t{\n\t\t\t\twords.slice(tabIndex*PAGECOUNT, (tabIndex+1)*PAGECOUNT).map(([i,w,n])=>{\n\t\t\t\t\treturn <li key={i} value={i+1}><span className=\"word\" data-tip={i} data-for=\"dict-tooltip\">{w}</span></li>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ol>\n\t\t\t<ReactTooltip id='dict-tooltip' delayHide={1000} place=\"right\" type=\"info\" effect=\"solid\" getContent={(id) => { \n\t\t\t\tid = parseInt(id)\n\t\t\t\tif (id>=0 && dictMap[id]) {\n\t\t\t\t\tconst matches = dictMap[id].map(dictIndex=>[dictIndex, dictionary[dictIndex]])\n\t\t\t\t\tif (matches && matches.length>0) {\n\t\t\t\t\t\treturn matches.map(([dictIndex, match])=>(\n\t\t\t\t\t\t\t<div key={\"dictionary\"+dictIndex}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span className=\"kanji\">{match[0].join(\", \")}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"r\">({match[1].join(\", \")})</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<ol>{\n\t\t\t\t\t\t\t\t\tmatch[2].map(([pos,explain],index)=>\n\t\t\t\t\t\t\t\t\t\t<li key={index}>{explain.join(' / ')}</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}}/>\n\t\t</Dict>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}